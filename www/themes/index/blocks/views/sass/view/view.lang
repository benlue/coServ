<?xml version="1.0" encoding="UTF-8"?>
<phrases>
  <ph id="feature">
    <en></en>
    <zh>新功能</zh>
  </ph>
  <ph id="about">
    <en></en>
    <zh>關於SASS</zh>
  </ph>
  <ph id="usage">
    <en></en>
    <zh>如何使用</zh>
  </ph>
  <ph id="workflow">
    <en></en>
    <zh>如何運作</zh>
  </ph>
  <ph id="extension">
    <en></en>
    <zh>自行擴充</zh>
  </ph>
  <ph id="s1_h1">
    <en>coServ ver 0.8.8</en>
    <zh>coServ ver 0.8.8 新功能</zh>
  </ph>
  <ph id="s1_h3">
    <en>Provide the first class support</en>
    <zh>內建 Sass</zh>
  </ph>
  <ph id="s1_p">
    <en>for Sass</en>
    <zh>支援 scss 語法，不用自行編譯或下額外指令</zh>
  </ph>
  <ph id="s2_h1">
    <en>About Sass</en>
    <zh>關於Sass</zh>
  </ph>
  <ph id="s2_h3">
    <en>Sass is a CSS extension</en>
    <zh>官方說明</zh>
  </ph>
  <ph id="s2_p">
    <en>Making CSS more flexible and powerful</en>
    <zh>簡單來說，讓 CSS 寫法更具彈性</zh>
  </ph>
  <ph id="s3_h1">
    <en>A Metaphor</en>
    <zh>就像這樣</zh>
  </ph>
  <ph id="s4_h1">
    <en>Using Sass On coServ</en>
    <zh>如何使用</zh>
  </ph>
  <ph id="s4_h3">
    <en>Breaking a big Sass file to smaller ones &lt;br&gt;for each block</en>
    <zh>把整頁的 .scss 檔拆分到各個區塊中，在區塊中以 .scss 取代原有的 .css 檔</zh>
  </ph>
  <ph id="s5_code">
    <en></en>
    <zh>網頁切板常以區塊區分，這也是coServ載入頁面的最小單位，而一個block 會有這些檔案</zh>
  </ph>
  <ph id="s5_comment">
    <en></en>
    <zh>多國語言設定檔</zh>
  </ph>
  <ph id="s5_p">
    <en>The above diagram shows the block directory. Simply place your .scss file there.</en>
    <zh>上圖是區塊檔案示意圖。直接把區塊的 .scss 檔放進去就會生效</zh>
  </ph>
  <ph id="s6_p1">
    <en>Wanna include instead rather than repeat the same Sass code?</en>
    <zh>希望讓 myBlock.scss 引用 scss code，而不用重複放在各個 blocks？</zh>
  </ph>
  <ph id="s6_p2">
    <en>Try the directory shown in the header. It's good for mixin or libraries.</en>
    <zh>試試放在標題所顯示的路徑，適合整理 mixin library 或自定的 mixin.scss</zh>
  </ph>
  <ph id="s7_h1">
    <en>How Things Organized</en>
    <zh>整理 code</zh>
  </ph>
  <ph id="s7_h3_1">
    <en>Use @import in the block scss file</en>
    <zh>用 @import 來匯入 scss 檔</zh>
  </ph>
  <ph id="s7_h3_2">
    <en>The imported file come from below</en>
    <zh>匯入檔來自...</zh>
  </ph>
  <ph id="s7_comment">
    <en>import mixin</en>
    <zh>載入自定 mixin</zh>
  </ph>
  <ph id="s8_h1">
    <en>Precedence</en>
    <zh>如何運作</zh>
  </ph>
  <ph id="s8_h3">
    <en>CSS or Sass</en>
    <zh>載入順序</zh>
  </ph>
  <ph id="s8_p1">
    <en>If both files (.css and .scss) exist, what will happen?</en>
    <zh>你可能會有疑問，有 CSS 又有 SCSS，那 coServ 會怎麼處理呢？</zh>
  </ph>
  <ph id="s8_p2">
    <en>If both files exist, the .scss file will be ignored.</en>
    <zh>先載入 blocks 內的 .css，找不到才載入 .scss</zh>
  </ph>
  <ph id="s9_h1">
    <en>Automatic Compilation</en>
    <zh>會和css互衝？</zh>
  </ph>
  <ph id="s9_p1">
    <en>Sass developers used to manually compile their code (or maybe use Grunt).</en>
    <zh>原生SASS編譯後，會產生 .css檔</zh>
  </ph>
  <ph id="s9_p2">
    <en>You don't have to.</en>
    <zh>但 coServ 直接幫你在網頁加上 scss 編譯完成的 css code，不會產生 .css 檔。</zh>
  </ph>
  <ph id="s10_h1">
    <en>Cusomization</en>
    <zh>自行擴充</zh>
  </ph>
  <ph id="s10_h3">
    <en>There are a few mixin libraries available</en>
    <zh>Mixin Library 有</zh>
  </ph>
  <ph id="s10_h5">
    <en>You can add them to coServ by yourself.</en>
    <zh>...等選擇，你可以自行擴充 coServ 來支援自己喜歡的 mixin</zh>
  </ph>
  <ph id="s11_h3">
    <en>Use Bourbon As An Example</en>
    <zh>以 Bourbon 作為自行擴充的範例</zh>
  </ph>
  <ph id="s11_comment1">
    <en>remove comments</en>
    <zh>移除註解</zh>
  </ph>
  <ph id="s11_comment2">
    <en>import bourbon mixin</en>
    <zh>載入bourbon mixin</zh>
  </ph>
  <ph id="s11_p">
    <en>Then you can use Bourbon in coServ.</en>
    <zh>這樣就能使用 Bourbon 的 mixin了！</zh>
  </ph>
</phrases>
